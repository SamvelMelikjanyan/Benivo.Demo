// <auto-generated />
using System;
using Benivo.Demo.DAL.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Benivo.Demo.DAL.Migrations
{
    [DbContext(typeof(BenivoDbContext))]
    [Migration("20211117104606_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<short>("CountryId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<DateTime>("LastUpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK_Cities_Id")
                        .IsClustered();

                    b.HasIndex("CountryId");

                    b.HasIndex("Name", "CountryId")
                        .IsUnique()
                        .HasDatabaseName("UK_Cities_NameCountryId");

                    b.ToTable("Cities");
                });

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.Company", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("Description")
                        .HasMaxLength(2000)
                        .HasColumnType("nvarchar(2000)");

                    b.Property<DateTime>("LastUpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK_Companies_Id")
                        .IsClustered();

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UK_Companies_Name");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.Country", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<DateTime>("LastUpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK_Countries_Id")
                        .IsClustered();

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UK_Countries_Name");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.JobAnnouncement", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<short>("CountryId")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ExpirationDate")
                        .HasColumnType("datetime2");

                    b.Property<byte>("JobTypeId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("LastUpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK_JobAnnouncements_Id")
                        .IsClustered();

                    b.HasIndex("CityId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CountryId");

                    b.HasIndex("JobTypeId");

                    b.ToTable("JobAnnouncements");
                });

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.JobCategory", b =>
                {
                    b.Property<short>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("smallint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<DateTime>("LastUpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<short?>("ParentId")
                        .HasColumnType("smallint");

                    b.HasKey("Id")
                        .HasName("PK_JobCategories_Id")
                        .IsClustered();

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UK_JobCategories_Name");

                    b.HasIndex("ParentId");

                    b.ToTable("JobCategories");
                });

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.JobType", b =>
                {
                    b.Property<byte>("Id")
                        .HasColumnType("tinyint");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<DateTime>("LastUpdateTime")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("SYSUTCDATETIME()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK_JobTypes")
                        .IsClustered();

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasDatabaseName("UK_JobTypes_Name");

                    b.ToTable("JobTypes");
                });

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.City", b =>
                {
                    b.HasOne("Benivo.Demo.Entities.Entities.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_Cities_Countries_CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.JobAnnouncement", b =>
                {
                    b.HasOne("Benivo.Demo.Entities.Entities.City", "City")
                        .WithMany("JobAnnouncements")
                        .HasForeignKey("CityId")
                        .HasConstraintName("FK_JobAnnouncements_Cities_CityId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Benivo.Demo.Entities.Entities.Company", "Company")
                        .WithMany("JobAnnouncements")
                        .HasForeignKey("CompanyId")
                        .HasConstraintName("FK_JobAnnouncements_Company_CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Benivo.Demo.Entities.Entities.Country", "Country")
                        .WithMany("JobAnnouncements")
                        .HasForeignKey("CountryId")
                        .HasConstraintName("FK_JobAnnouncements_Countries_CountryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Benivo.Demo.Entities.Entities.JobType", "JobType")
                        .WithMany("JobAnnouncements")
                        .HasForeignKey("JobTypeId")
                        .HasConstraintName("FK_JobAnnouncements_JobTypes_JobTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("City");

                    b.Navigation("Company");

                    b.Navigation("Country");

                    b.Navigation("JobType");
                });

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.JobCategory", b =>
                {
                    b.HasOne("Benivo.Demo.Entities.Entities.JobCategory", "Parent")
                        .WithMany("SubCategories")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("FK_JobCategories_JobCategories_ParentId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.City", b =>
                {
                    b.Navigation("JobAnnouncements");
                });

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.Company", b =>
                {
                    b.Navigation("JobAnnouncements");
                });

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.Country", b =>
                {
                    b.Navigation("Cities");

                    b.Navigation("JobAnnouncements");
                });

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.JobCategory", b =>
                {
                    b.Navigation("SubCategories");
                });

            modelBuilder.Entity("Benivo.Demo.Entities.Entities.JobType", b =>
                {
                    b.Navigation("JobAnnouncements");
                });
#pragma warning restore 612, 618
        }
    }
}
